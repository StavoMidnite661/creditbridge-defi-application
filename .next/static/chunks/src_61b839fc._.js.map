{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/WalletConnect.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { Button } from '@/components/ui/button'\n\ninterface WalletConnectProps {\n  onConnect?: (provider: ethers.providers.Web3Provider) => void;\n}\n\nconst WalletConnect: React.FC<WalletConnectProps> = ({ onConnect }) => {\n  const [account, setAccount] = useState<string | null>(null)\n  const [connecting, setConnecting] = useState(false)\n\n  const connectWallet = async () => {\n    if (connecting) return\n    \n    try {\n      setConnecting(true)\n      \n      if (!(window as any).ethereum) {\n        throw new Error(\"MetaMask not found. Please install it to continue.\")\n      }\n\n      const provider = new ethers.providers.Web3Provider((window as any).ethereum)\n      await provider.send(\"eth_requestAccounts\", [])\n      \n      const signer = provider.getSigner()\n      const address = await signer.getAddress()\n      \n      setAccount(address)\n      onConnect?.(provider)\n\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error)\n      alert(error instanceof Error ? error.message : \"Failed to connect wallet\")\n    } finally {\n      setConnecting(false)\n    }\n  }\n\n  // Handle account changes\n  useEffect(() => {\n    if (!(window as any).ethereum) return\n\n    const handleAccountsChanged = (accounts: string[]) => {\n      if (accounts.length === 0) {\n        setAccount(null)\n      } else {\n        setAccount(accounts[0])\n      }\n    }\n\n    ;(window as any).ethereum.on('accountsChanged', handleAccountsChanged)\n    \n    return () => {\n      ;(window as any).ethereum.removeListener('accountsChanged', handleAccountsChanged)\n    }\n  }, [])\n\n  return (\n    <div className=\"flex items-center gap-4\">\n      {account ? (\n        <div className=\"flex items-center gap-2\">\n          <div className=\"h-2 w-2 rounded-full bg-green-500\" />\n          <span className=\"text-sm font-medium\">\n            {`${account.substring(0, 6)}...${account.substring(account.length - 4)}`}\n          </span>\n        </div>\n      ) : (\n        <Button \n          onClick={connectWallet} \n          disabled={connecting}\n          className=\"bg-blue-600 hover:bg-blue-700\"\n        >\n          {connecting ? \"Connecting...\" : \"Connect Wallet\"}\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default WalletConnect\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAUA,MAAM,gBAA8C,CAAC,EAAE,SAAS,EAAE;;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACtD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,gBAAgB;QACpB,IAAI,YAAY;QAEhB,IAAI;YACF,cAAc;YAEd,IAAI,CAAC,AAAC,OAAe,QAAQ,EAAE;gBAC7B,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,WAAW,IAAI,mLAAA,CAAA,SAAM,CAAC,SAAS,CAAC,YAAY,CAAC,AAAC,OAAe,QAAQ;YAC3E,MAAM,SAAS,IAAI,CAAC,uBAAuB,EAAE;YAE7C,MAAM,SAAS,SAAS,SAAS;YACjC,MAAM,UAAU,MAAM,OAAO,UAAU;YAEvC,WAAW;YACX,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACjD,SAAU;YACR,cAAc;QAChB;IACF;IAEA,yBAAyB;IACzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,CAAC,AAAC,OAAe,QAAQ,EAAE;YAE/B,MAAM;iEAAwB,CAAC;oBAC7B,IAAI,SAAS,MAAM,KAAK,GAAG;wBACzB,WAAW;oBACb,OAAO;wBACL,WAAW,QAAQ,CAAC,EAAE;oBACxB;gBACF;;YAEE,OAAe,QAAQ,CAAC,EAAE,CAAC,mBAAmB;YAEhD;2CAAO;;oBACH,OAAe,QAAQ,CAAC,cAAc,CAAC,mBAAmB;gBAC9D;;QACF;kCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBACZ,wBACC,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;;;;;8BACf,6LAAC;oBAAK,WAAU;8BACb,GAAG,QAAQ,SAAS,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,SAAS,CAAC,QAAQ,MAAM,GAAG,IAAI;;;;;;;;;;;iCAI5E,6LAAC,qIAAA,CAAA,SAAM;YACL,SAAS;YACT,UAAU;YACV,WAAU;sBAET,aAAa,kBAAkB;;;;;;;;;;;AAK1C;GAtEM;KAAA;uCAwES","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/creditBridgeService.ts"],"sourcesContent":["import { ethers, Contract, BigNumber } from 'ethers';\n\nconst CREDIT_BRIDGE_ABI = [\n  \"function getLatestUSDPrice() view returns (int256)\",\n  \"function burnAndSettle(uint256 amount, string memory achRecipientId, bytes32 kycHash)\",\n  \"function balanceOf(address account) view returns (uint256)\",\n  \"event CreditBurned(address indexed user, uint256 amount, string achTransactionId, uint256 timestamp, bytes32 transactionRef, uint256 blockNumber, bytes32 blockHash)\"\n];\n\n// TODO: Replace with actual contract address when deploying to mainnet\nconst CREDIT_BRIDGE_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Local hardhat default deployment address\n\nexport const getContractInstance = (provider: any): Contract => {\n  const signer = provider.getSigner();\n  return new ethers.Contract(CREDIT_BRIDGE_ADDRESS, CREDIT_BRIDGE_ABI, signer);\n};\n\nexport const getLatestUSDPrice = async (provider: any): Promise<number> => {\n  try {\n    const contract = getContractInstance(provider);\n    console.log('Fetching latest USD price');\n    \n    const price = await contract.getLatestUSDPrice();\n    console.log('Raw price:', price.toString());\n    \n    const formattedPrice = Number(ethers.utils.formatUnits(price, 8));\n    console.log('Formatted price:', formattedPrice);\n    \n    return formattedPrice;\n  } catch (error: any) {\n    console.error(\"Error fetching price:\", {\n      message: error.message,\n      code: error.code,\n      contractAddress: CREDIT_BRIDGE_ADDRESS,\n    });\n    throw new Error(`Failed to fetch price: ${error.message || 'Unknown error'}`);\n  }\n};\n\nexport const getBalance = async (provider: any, address: string): Promise<string> => {\n  try {\n    const contract = getContractInstance(provider);\n    console.log('Fetching balance for address:', address);\n    \n    // Get network info for debugging\n    const network = await provider.getNetwork();\n    console.log('Current network:', network);\n    \n    const balance = await contract.balanceOf(address);\n    console.log('Raw balance:', balance.toString());\n    \n    const formattedBalance = ethers.utils.formatUnits(balance, 18);\n    console.log('Formatted balance:', formattedBalance);\n    \n    return formattedBalance;\n  } catch (error: any) {\n    console.error(\"Error fetching balance:\", {\n      message: error.message,\n      code: error.code,\n      contractAddress: CREDIT_BRIDGE_ADDRESS,\n    });\n    throw new Error(`Failed to fetch balance: ${error.message || 'Unknown error'}`);\n  }\n};\n\nexport const burnAndSettle = async (\n  provider: any,\n  amount: string,\n  achRecipientId: string,\n  kycHash: string\n): Promise<any> => {\n  try {\n    const contract = getContractInstance(provider);\n    console.log('Executing burnAndSettle with params:', {\n      amount,\n      achRecipientId,\n      kycHash: kycHash.substring(0, 10) + '...' // Log partial hash for privacy\n    });\n    \n    const parsedAmount = ethers.utils.parseUnits(amount, 18);\n    console.log('Parsed amount:', parsedAmount.toString());\n    \n    const tx = await contract.burnAndSettle(parsedAmount, achRecipientId, kycHash);\n    console.log('Transaction hash:', tx.hash);\n    \n    const receipt = await tx.wait();\n    console.log('Transaction confirmed in block:', receipt.blockNumber);\n    \n    return receipt;\n  } catch (error: any) {\n    console.error(\"Error executing burnAndSettle:\", {\n      message: error.message,\n      code: error.code,\n      contractAddress: CREDIT_BRIDGE_ADDRESS,\n    });\n    throw new Error(`Failed to burn and settle: ${error.message || 'Unknown error'}`);\n  }\n};\n\nexport const listenToCreditBurnedEvents = (\n  provider: any,\n  callback: (event: any) => void\n) => {\n  const contract = getContractInstance(provider);\n  contract.on(\"CreditBurned\", (user, amount, achTransactionId, timestamp, transactionRef, blockNumber, blockHash) => {\n    callback({\n      user,\n      amount: ethers.utils.formatUnits(amount, 18),\n      achTransactionId,\n      timestamp: timestamp.toNumber(),\n      transactionRef,\n      blockNumber: blockNumber.toNumber(),\n      blockHash\n    });\n  });\n  return () => {\n    contract.removeAllListeners(\"CreditBurned\");\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/TransactionForm.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { ethers } from 'ethers'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card } from '@/components/ui/card'\nimport { burnAndSettle } from '@/lib/creditBridgeService'\n\ninterface TransactionFormProps {\n  provider: ethers.providers.Web3Provider | null;\n}\n\nconst TransactionForm: React.FC<TransactionFormProps> = ({ provider }) => {\n  const [amount, setAmount] = useState('')\n  const [achRecipientId, setAchRecipientId] = useState('')\n  const [kycHash, setKycHash] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!provider) {\n      setError('Please connect your wallet first')\n      return\n    }\n\n    setError(null)\n    setSuccess(null)\n    setLoading(true)\n\n    try {\n      // Basic validation\n      if (!amount || !achRecipientId || !kycHash) {\n        throw new Error('All fields are required')\n      }\n\n      if (isNaN(Number(amount)) || Number(amount) <= 0) {\n        throw new Error('Please enter a valid amount')\n      }\n\n      // Generate KYC hash if provided as string\n      const formattedKycHash = ethers.utils.isHexString(kycHash) \n        ? kycHash \n        : ethers.utils.id(kycHash)\n\n      const tx = await burnAndSettle(\n        provider,\n        amount,\n        achRecipientId,\n        formattedKycHash\n      )\n\n      setSuccess(`Transaction successful! Hash: ${tx.transactionHash}`)\n      \n      // Reset form\n      setAmount('')\n      setAchRecipientId('')\n      setKycHash('')\n\n    } catch (err) {\n      console.error('Transaction failed:', err)\n      setError(err instanceof Error ? err.message : 'Transaction failed')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Card className=\"p-6 bg-white/5 border-white/10\">\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"amount\" className=\"text-gray-100\">Amount</Label>\n          <Input\n            id=\"amount\"\n            type=\"number\"\n            step=\"any\"\n            placeholder=\"Enter amount of credits to burn\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            disabled={loading}\n            className=\"bg-white/5 border-white/10 text-white placeholder:text-gray-400\"\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"achRecipientId\" className=\"text-gray-100\">ACH Recipient ID</Label>\n          <Input\n            id=\"achRecipientId\"\n            type=\"text\"\n            placeholder=\"Enter ACH recipient ID\"\n            value={achRecipientId}\n            onChange={(e) => setAchRecipientId(e.target.value)}\n            disabled={loading}\n            className=\"bg-white/5 border-white/10 text-white placeholder:text-gray-400\"\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"kycHash\" className=\"text-gray-100\">KYC Hash</Label>\n          <Input\n            id=\"kycHash\"\n            type=\"text\"\n            placeholder=\"Enter KYC verification hash\"\n            value={kycHash}\n            onChange={(e) => setKycHash(e.target.value)}\n            disabled={loading}\n            className=\"bg-white/5 border-white/10 text-white placeholder:text-gray-400\"\n          />\n        </div>\n\n        {error && (\n          <div className=\"text-red-500 text-sm\">{error}</div>\n        )}\n\n        {success && (\n          <div className=\"text-green-500 text-sm\">{success}</div>\n        )}\n\n        <Button \n          type=\"submit\" \n          disabled={loading || !provider}\n          className=\"w-full bg-blue-600 hover:bg-blue-700\"\n        >\n          {loading ? 'Processing...' : 'Burn & Settle'}\n        </Button>\n      </form>\n    </Card>\n  )\n}\n\nexport default TransactionForm\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/TransactionHistory.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { Card } from '@/components/ui/card'\nimport { getContractInstance } from '@/lib/creditBridgeService'\n\ninterface Transaction {\n  user: string\n  amount: string\n  achTransactionId: string\n  timestamp: number\n  transactionRef: string\n  blockNumber: number\n}\n\ninterface TransactionHistoryProps {\n  provider: ethers.providers.Web3Provider | null\n}\n\nconst TransactionHistory: React.FC<TransactionHistoryProps> = ({ provider }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      if (!provider) {\n        setLoading(false)\n        return\n      }\n\n      try {\n        const contract = getContractInstance(provider)\n        \n        // Get CreditBurned events from the last 1000 blocks\n        const filter = contract.filters.CreditBurned()\n        const currentBlock = await provider.getBlockNumber()\n        const fromBlock = Math.max(0, currentBlock - 1000)\n        \n        const events = await contract.queryFilter(filter, fromBlock)\n        \n        const txs = events.map(event => ({\n          user: event.args?.user,\n          amount: ethers.utils.formatUnits(event.args?.amount || 0, 18),\n          achTransactionId: event.args?.achTransactionId,\n          timestamp: event.args?.timestamp.toNumber(),\n          transactionRef: event.args?.transactionRef,\n          blockNumber: event.args?.blockNumber.toNumber()\n        }))\n\n        setTransactions(txs.reverse()) // Show newest first\n        setError(null)\n      } catch (err) {\n        console.error('Failed to fetch transactions:', err)\n        setError('Failed to load transaction history')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchTransactions()\n\n    // Listen for new CreditBurned events\n    if (provider) {\n      const contract = getContractInstance(provider)\n      const handleCreditBurned = (\n        user: string,\n        amount: ethers.BigNumber,\n        achTransactionId: string,\n        timestamp: ethers.BigNumber,\n        transactionRef: string,\n        blockNumber: ethers.BigNumber\n      ) => {\n        const newTx = {\n          user,\n          amount: ethers.utils.formatUnits(amount, 18),\n          achTransactionId,\n          timestamp: timestamp.toNumber(),\n          transactionRef,\n          blockNumber: blockNumber.toNumber()\n        }\n        setTransactions(prev => [newTx, ...prev])\n      }\n\n      contract.on('CreditBurned', handleCreditBurned)\n\n      return () => {\n        contract.off('CreditBurned', handleCreditBurned)\n      }\n    }\n  }, [provider])\n\n  if (loading) {\n    return (\n      <Card className=\"p-6 bg-white/5 border-white/10\">\n        <div className=\"text-center\">Loading transactions...</div>\n      </Card>\n    )\n  }\n\n  if (error) {\n    return (\n      <Card className=\"p-6 bg-white/5 border-white/10\">\n        <div className=\"text-red-500 text-center\">{error}</div>\n      </Card>\n    )\n  }\n\n  if (!provider) {\n    return (\n      <Card className=\"p-6 bg-white/5 border-white/10\">\n        <div className=\"text-center\">Connect your wallet to view transaction history</div>\n      </Card>\n    )\n  }\n\n  if (transactions.length === 0) {\n    return (\n      <Card className=\"p-6 bg-white/5 border-white/10\">\n        <div className=\"text-center\">No transactions found</div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card className=\"p-6 bg-white/5 border-white/10\">\n      <Table>\n        <TableHeader>\n          <TableRow className=\"border-white/10\">\n            <TableHead className=\"text-gray-100\">User</TableHead>\n            <TableHead className=\"text-gray-100\">Amount</TableHead>\n            <TableHead className=\"text-gray-100\">ACH ID</TableHead>\n            <TableHead className=\"text-gray-100\">Time</TableHead>\n            <TableHead className=\"text-gray-100\">Block</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {transactions.map((tx, index) => (\n            <TableRow key={`${tx.transactionRef}-${index}`} className=\"border-white/10\">\n              <TableCell className=\"font-mono text-white\">\n                {tx.user.substring(0, 6)}...{tx.user.substring(tx.user.length - 4)}\n              </TableCell>\n              <TableCell className=\"text-white\">{tx.amount}</TableCell>\n              <TableCell className=\"font-mono text-white\">\n                {tx.achTransactionId.substring(0, 8)}...\n              </TableCell>\n              <TableCell className=\"text-white\">\n                {new Date(tx.timestamp * 1000).toLocaleString()}\n              </TableCell>\n              <TableCell className=\"text-white\">{tx.blockNumber}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Card>\n  )\n}\n\nexport default TransactionHistory\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1151, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport WalletConnect from '@/components/WalletConnect'\nimport TransactionForm from '@/components/TransactionForm'\nimport TransactionHistory from '@/components/TransactionHistory'\nimport { Card } from '@/components/ui/card'\nimport { getLatestUSDPrice, getBalance } from '@/lib/creditBridgeService'\n\nexport default function Dashboard() {\n  const [provider, setProvider] = useState<ethers.providers.Web3Provider | null>(null)\n  const [balance, setBalance] = useState<string | null>(null)\n  const [usdPrice, setUsdPrice] = useState<number | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleConnect = async (newProvider: ethers.providers.Web3Provider) => {\n    try {\n      setLoading(true)\n      setError(null)\n      setProvider(newProvider)\n\n      // Get connected account\n      const signer = newProvider.getSigner()\n      const address = await signer.getAddress()\n\n      // Get network info\n      const network = await newProvider.getNetwork()\n      console.log('Connected to network:', network)\n\n      // Fetch balance and price\n      const [userBalance, price] = await Promise.all([\n        getBalance(newProvider, address),\n        getLatestUSDPrice(newProvider)\n      ])\n\n      setBalance(userBalance)\n      setUsdPrice(price)\n    } catch (error: any) {\n      console.error('Failed to fetch account data:', error)\n      setError(error.message || 'Failed to load account data')\n      setBalance(null)\n      setUsdPrice(null)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Refresh data periodically\n  useEffect(() => {\n    if (!provider) return\n\n    const refreshData = async () => {\n      try {\n        const signer = provider.getSigner()\n        const address = await signer.getAddress()\n        \n        const [userBalance, price] = await Promise.all([\n          getBalance(provider, address),\n          getLatestUSDPrice(provider)\n        ])\n\n        setBalance(userBalance)\n        setUsdPrice(price)\n        setError(null)\n      } catch (error: any) {\n        console.error('Failed to refresh data:', error)\n        setError('Failed to refresh data')\n      }\n    }\n\n    const interval = setInterval(refreshData, 15000) // Refresh every 15 seconds\n    return () => clearInterval(interval)\n  }, [provider])\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-gray-900 to-black text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-2xl font-bold\">CreditBridge Dashboard</h1>\n          <WalletConnect onConnect={handleConnect} />\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <Card className=\"p-6 bg-white/5 border-white/10\">\n            <h2 className=\"text-lg font-semibold mb-2 text-gray-100\">Your Balance</h2>\n            <p className=\"text-3xl font-bold text-white\">\n              {loading ? (\n                \"Loading...\"\n              ) : error ? (\n                <span className=\"text-red-400 text-xl\">{error}</span>\n              ) : balance ? (\n                `${Number(balance).toLocaleString()} TC`\n              ) : (\n                \"Connect wallet to view balance\"\n              )}\n            </p>\n          </Card>\n\n          <Card className=\"p-6 bg-white/5 border-white/10\">\n            <h2 className=\"text-lg font-semibold mb-2 text-gray-100\">Current USD Price</h2>\n            <p className=\"text-3xl font-bold text-white\">\n              {loading ? (\n                \"Loading...\"\n              ) : error ? (\n                <span className=\"text-red-400 text-xl\">{error}</span>\n              ) : usdPrice ? (\n                `$${usdPrice.toLocaleString()}`\n              ) : (\n                \"Connect wallet to view price\"\n              )}\n            </p>\n          </Card>\n        </div>\n\n        {/* Transaction Form */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-100\">Burn & Settle</h2>\n          <TransactionForm provider={provider} />\n        </div>\n\n        {/* Transaction History */}\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-100\">Transaction History</h2>\n          <TransactionHistory provider={provider} />\n        </div>\n      </div>\n    </main>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}